/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package erpgest.panels;

import erpgest.MainFrame;
import erpgest.db.DbConn;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import erpgest.utils.ChooseData;
import erpgest.utils.Utils;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SteVid <www.stevid.it>
 */
public class JPanelOrdini extends javax.swing.JPanel implements InterfaceCallBackArticoli,InterfaceCallBackClienti{

    SimpleDateFormat formatterData = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat formatterOre = new SimpleDateFormat("HH:mm");
    SimpleDateFormat formatterOreSecondi = new SimpleDateFormat("HH:mm:ss");
    SimpleDateFormat formatterDataENG = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat formatterDataAndTimeENG = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");    

    MainFrame parentFrame ;
    
    String UPDATE_OK = "Aggiornamento effettuato.";
    String INSERT_OK = "Inserimento effettuato.";
    
    public void setParentFrame(MainFrame parent){
        this.parentFrame = parent;
    }    
    
    /**
     * Creates new form JPanelOrdini
     */
    public JPanelOrdini() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClienti = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableArticoli = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonScegliData = new javax.swing.JButton();
        jButtonAggiungiTuttiClienti = new javax.swing.JButton();
        jButtonCancellaCliente = new javax.swing.JButton();
        jButtonAggiungliCliente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabelID = new javax.swing.JLabel();
        jButtonNuovoOrdine = new javax.swing.JButton();
        jButtonAggiungiArticolo = new javax.swing.JButton();
        jButtonRimuoviArticolo = new javax.swing.JButton();

        setLayout(null);

        jTableClienti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ragione Sociale", "Partita IVA", "Indirizzo", "Citta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableClienti);
        if (jTableClienti.getColumnModel().getColumnCount() > 0) {
            jTableClienti.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTableClienti.getColumnModel().getColumn(0).setMaxWidth(30);
            jTableClienti.getColumnModel().getColumn(1).setPreferredWidth(350);
            jTableClienti.getColumnModel().getColumn(1).setMaxWidth(400);
            jTableClienti.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTableClienti.getColumnModel().getColumn(2).setMaxWidth(100);
            jTableClienti.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTableClienti.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(50, 100, 970, 190);

        jTableArticoli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Descrizione", "Listino", "Prezzo", "Colli"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableArticoli);
        if (jTableArticoli.getColumnModel().getColumnCount() > 0) {
            jTableArticoli.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTableArticoli.getColumnModel().getColumn(0).setMaxWidth(60);
            jTableArticoli.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTableArticoli.getColumnModel().getColumn(1).setMaxWidth(200);
            jTableArticoli.getColumnModel().getColumn(2).setPreferredWidth(300);
            jTableArticoli.getColumnModel().getColumn(2).setMaxWidth(350);
            jTableArticoli.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTableArticoli.getColumnModel().getColumn(3).setMaxWidth(100);
            jTableArticoli.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTableArticoli.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        add(jScrollPane2);
        jScrollPane2.setBounds(50, 310, 880, 310);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel1.setText("Data Ordine:");
        add(jLabel1);
        jLabel1.setBounds(60, 50, 90, 18);

        jButtonScegliData.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButtonScegliData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erpgest/img/ico/calendar_1.png"))); // NOI18N
        jButtonScegliData.setText("Scegli Data");
        jButtonScegliData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonScegliDataActionPerformed(evt);
            }
        });
        add(jButtonScegliData);
        jButtonScegliData.setBounds(150, 40, 150, 40);

        jButtonAggiungiTuttiClienti.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erpgest/images/add_all.png"))); // NOI18N
        add(jButtonAggiungiTuttiClienti);
        jButtonAggiungiTuttiClienti.setBounds(830, 60, 70, 32);

        jButtonCancellaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erpgest/img/ico/cross.png"))); // NOI18N
        add(jButtonCancellaCliente);
        jButtonCancellaCliente.setBounds(970, 60, 40, 32);

        jButtonAggiungliCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erpgest/images/add_user.png"))); // NOI18N
        add(jButtonAggiungliCliente);
        jButtonAggiungliCliente.setBounds(900, 60, 70, 32);

        jLabel2.setText("ID");
        add(jLabel2);
        jLabel2.setBounds(10, 10, 20, 16);

        jLabelID.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabelID.setText("-");
        add(jLabelID);
        jLabelID.setBounds(40, 10, 50, 15);

        jButtonNuovoOrdine.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButtonNuovoOrdine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erpgest/img/ico/note.png"))); // NOI18N
        jButtonNuovoOrdine.setText("Nuovo");
        jButtonNuovoOrdine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuovoOrdineActionPerformed(evt);
            }
        });
        add(jButtonNuovoOrdine);
        jButtonNuovoOrdine.setBounds(310, 40, 90, 40);

        jButtonAggiungiArticolo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erpgest/img/ico/add.png"))); // NOI18N
        add(jButtonAggiungiArticolo);
        jButtonAggiungiArticolo.setBounds(940, 330, 40, 31);

        jButtonRimuoviArticolo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erpgest/img/ico/minus2.png"))); // NOI18N
        jButtonRimuoviArticolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRimuoviArticoloActionPerformed(evt);
            }
        });
        add(jButtonRimuoviArticolo);
        jButtonRimuoviArticolo.setBounds(940, 370, 40, 31);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonScegliDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonScegliDataActionPerformed
        GregorianCalendar date = new GregorianCalendar();
        Date dal;
        Date data;
        Date oggi = (Calendar.getInstance()).getTime();
        String strOggi = formatterData.format(oggi);          
        ChooseData dc = new ChooseData(parentFrame, date);
        String choosed = dc.getDate();
        if( choosed.equals("") || choosed == null){
            choosed = "Scegli data";
        }else{
                    Thread t = new Thread(new erpgest.utils.ShowWaiting(parentFrame.getFrame(), null, "Salvataggio in corso. Attendere"));
        t.start();

        while (parentFrame.waiting == null) {
            try {
                Thread.sleep(100);
            } catch (Exception e) {
            }
        }

        Thread tt = new Thread(new PopolaListe());
        tt.start();
        
        }
        try {
            data = formatterData.parse(choosed);
            jButtonScegliData.setText(choosed);
            
        } catch (Exception e) {
        }
        
        
        
    }//GEN-LAST:event_jButtonScegliDataActionPerformed

    private void jButtonRimuoviArticoloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRimuoviArticoloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRimuoviArticoloActionPerformed

    private void jButtonNuovoOrdineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuovoOrdineActionPerformed
        //controllo ci sia una data indicata
        if( jButtonScegliData.getText().startsWith("Scegli") ){
            JOptionPane.showMessageDialog(parentFrame.getFrame(), "Scegliere una data.", "Attenzione", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jButtonNuovoOrdineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAggiungiArticolo;
    private javax.swing.JButton jButtonAggiungiTuttiClienti;
    private javax.swing.JButton jButtonAggiungliCliente;
    private javax.swing.JButton jButtonCancellaCliente;
    private javax.swing.JButton jButtonNuovoOrdine;
    private javax.swing.JButton jButtonRimuoviArticolo;
    private javax.swing.JButton jButtonScegliData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableArticoli;
    private javax.swing.JTable jTableClienti;
    // End of variables declaration//GEN-END:variables

    @Override
    public void aggiornaListaArticoli(String id) {
        
    }

    @Override
    public void aggiornaListaClienti(String id) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private class PopolaListe implements Runnable {

        public PopolaListe() {
        }

        @Override
        public void run() {
            //prima controllo che non ci sia un ordine attivo nella data indicata
            DbConn conn = new DbConn();
            conn.makeConn();
            ResultSet res2 = null;
            try {
                int count = 0;
                int id = 0;
                String result = "";
                String query = "SELECT count(*) FROM ORDINI "
                        + " WHERE "
                        + " ATTIVO = 'S' "
                        + " AND strftime('%d/%m/%Y',data_ORDINE) = '"+jButtonScegliData.getText()+"'";
                ResultSet res = conn.selectSMS(query);
                if(res.next()){
                    count = res.getInt(1);
                }
                if (count>0) {
                    query = "SELECT id FROM ORDINI "
                        + " WHERE "
                        + " ATTIVO = 'S' "
                        + " AND strftime('%d/%m/%Y',data_creazione) = '"+jButtonScegliData.getText()+"'";
                    res = conn.selectSMS(query);
                    if(res.next()){
                        id = res.getInt("ID");
                    }
                    if (id>0) {
                        query = "select A.ID,"
                                + "A.RAGIONE_SOCIALE,"
                                + "A.PARTITA_IVA,"
                                + "A.INDIRIZZO_AZIENDA,"
                                + "A.CITTA_AZIENDA"
                                + " from DETTAGLIO_ORDINI_CLIENTI,OC"
                                + " ANAGRAFICA A WHERE OC.ID = "+id+"" 
                                + " AND OC.ATTIVO = 'S'"
                                + " AND OC.ID_ANAGRAFICA = A.ID";
                        res2 = conn.selectSMS(query);
                        jTableClienti.setVisible(false);
                        DefaultTableModel defaultModel = (DefaultTableModel) jTableClienti.getModel();

                        while (defaultModel.getRowCount() > 0) {
                            defaultModel.removeRow(0);
                        }      
                        
                        while (res2.next()) {
                            Object[] cell = {res2.getString("ID"),
                                res2.getString("RAGIONE_SOCIALE"),
                                res2.getString("PARTITA_IVA"),
                                res2.getString("INDIRIZZO_AZIENDA"),
                                res2.getString("CITTA_AZIENDA")
                            };
                            defaultModel.addRow(cell);
                        }                        
                        
                        jTableClienti.invalidate();
                        jTableClienti.validate();
                        jTableClienti.repaint();    
                        jTableClienti.setVisible(true);                        
                        
                    }
                }else{
                    //creo un nuovo ordine
                    query = "INSERT INTO ORDINI "
                              + "(TOTALE_COLLI,DATA_ORDINE) VALUES (0,'"+jButtonScegliData.getText()+"');";
                    result = conn.insert(query);
                    if (result.equals(INSERT_OK)) {
                        //recupero id
                        query = "select seq from sqlite_sequence where name='ORDINI'";
                        res = conn.selectSMS(query);
                        id = res.getInt(1);
                        jLabelID.setText(""+id);
                        
                        jTableClienti.setVisible(false);
                        DefaultTableModel defaultModel = (DefaultTableModel) jTableClienti.getModel();

                        while (defaultModel.getRowCount() > 0) {
                            defaultModel.removeRow(0);
                        }      
                        jTableClienti.invalidate();
                        jTableClienti.validate();
                        jTableClienti.repaint();    
                        jTableClienti.setVisible(true);

                        jTableArticoli.setVisible(false);
                        defaultModel = (DefaultTableModel) jTableArticoli.getModel();

                        while (defaultModel.getRowCount() > 0) {
                            defaultModel.removeRow(0);
                        }      
                        jTableArticoli.invalidate();
                        jTableArticoli.validate();
                        jTableArticoli.repaint();    
                        jTableArticoli.setVisible(true);                        

                    }
                }
                
            } catch (Exception e) {
                Utils.logError(e, "", true);
            }
            conn.close();
            parentFrame.waiting.dispose();
            parentFrame.waiting = null;
            validate();
            repaint();            
        }

        private void popolaListe(int id) {
            
        }
    }
}
